name: Cloud - Infra Base Prod Monitoring

concurrency:
  group: ${{ github.ref }}-prod-monitoring-infra
  cancel-in-progress: true

on:
  push:
    branches:
      - develop
    paths:
      - "infra/monitoring/prod/**"

  pull_request:
    branches:
      - "develop"
    paths:
      - "infra/monitoring/prod/**"

jobs:
  terraform-plan-base-infra:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: monitoring
    concurrency: terraform-mon
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN_MON }}
          role-session-name: tucana-mon

      - name: Terraform Format
        id: tf_format
        run: terraform fmt -check
        working-directory: ./infra/monitoring/prod/tf

      - name: Terraform Init
        id: tf_init
        run: terraform init
        working-directory: ./infra/monitoring/prod/tf

      - name: Terraform Validate
        id: tf_validate
        run: terraform validate -no-color
        working-directory: ./infra/monitoring/prod/tf

      - name: Terraform Plan
        id: tf_plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
        working-directory: ./infra/monitoring/prod/tf

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.tf_plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.tf_format.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.tf_init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.tf_plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.tf_validate.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.tf_plan.outcome == 'failure'
        run: exit 1

  terraform-apply-base-infra:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: monitoring
    concurrency: terraform-mon
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN_MON }}

      - name: Terraform Format
        id: tf_format
        run: terraform fmt -check
        working-directory: ./infra/monitoring/prod/tf

      - name: Terraform Init
        id: tf_init
        run: terraform init
        working-directory: ./infra/monitoring/prod/tf

      - name: Deploy base infra
        id: deploy_base_infra
        run: terraform apply -auto-approve -input=false
        working-directory: ./infra/monitoring/prod/tf

  deploy-k8s-infra:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - terraform-apply-base-infra
    environment: monitoring
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN_MON }}

      - name: Get EKS credentials
        run: |
          aws eks update-kubeconfig --region us-east-2 --name tucana-monitoring-prod

      - name: Add Helm repos
        run: |
          helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver
          helm repo add jetstack https://charts.jetstack.io
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add vm https://victoriametrics.github.io/helm-charts/
          helm repo add elastic https://helm.elastic.co
          helm repo update

      - name: Apply aws-auth cm
        working-directory: ./infra/monitoring/prod/k8s-infra-apps
        run: |
          kubectl apply -f aws-auth/aws-auth.yaml

      - name: Deploy aws-ebs-csi-driver
        working-directory: ./infra/monitoring/prod/k8s-infra-apps
        run: |
          helm upgrade -i aws-ebs-csi-driver -n kube-system aws-ebs-csi-driver/aws-ebs-csi-driver -f aws-ebs-csi-driver/values.yaml --version 2.19.0

      - name: Deploy cert-manager
        working-directory: ./infra/monitoring/prod/k8s-infra-apps
        run: |
          helm upgrade -i cert-manager jetstack/cert-manager -n cert-manager --create-namespace -f cert-manager/values.yaml --version v1.11.0
          kubectl apply -f cert-manager/letsencrypt-prod.yaml

      - name: Deploy ingress-nginx
        working-directory: ./infra/monitoring/prod/k8s-infra-apps
        run: |
          helm upgrade -i ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx --create-namespace --version=4.6.1

      - name: Deploy metrics-server
        run: |
          kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.6.3/components.yaml

      - name: Deploy VictoriaMetrics
        working-directory: ./infra/monitoring/prod/k8s-infra-apps
        run: |
          helm upgrade -i vm vm/victoria-metrics-k8s-stack -n monitoring --create-namespace -f victoriametrics/values.yaml --version 0.15.0
          kubectl apply -f victoriametrics/vmauth.yaml -n monitoring

      - name: Deploy ECK
        working-directory: ./infra/monitoring/prod/k8s-infra-apps
        run: |
          helm upgrade -i elastic-operator elastic/eck-operator -n elastic-system --create-namespace --version 2.7.0
          kubectl create namespace logging --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f eck/eck.yaml -n logging